name: Python CI/CD

on:
  push:
    branches:
      - master

env:
  IMAGE_TAG: ${{ github.sha }}

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov

    - name: Set environment variables
      run: |
        echo "GROQ_API_KEY=${{ secrets.GROQ_API_KEY }}" >> $GITHUB_ENV
        echo "PINECONE_KEY=${{ secrets.PINECONE_KEY }}" >> $GITHUB_ENV
        echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" >> $GITHUB_ENV
        echo "INDEX_NAME=${{ secrets.INDEX_NAME }}" >> $GITHUB_ENV

    - name: Run tests with coverage
      run: |
        pytest --cov=./

    - name: Upload coverage report
      uses: actions/upload-artifact@v3
      with:
        name: coverage-report
        path: ./htmlcov

  build_and_push:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build quiz docker image
      run: |
        docker build -t sainageswar/agent-boot:$IMAGE_TAG .

    - name: Push image
      run: |
        if [ "${{ github.ref }}" == "refs/heads/master" ]; then
          docker push sainageswar/agent-boot:$IMAGE_TAG
        fi
