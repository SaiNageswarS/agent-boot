syntax = "proto3";

import "search.proto";

option go_package = "agent-boot/proto/generated";

package search;

service Agent {
    rpc CallAgent(AgentInput) returns (stream AgentStreamChunk) {}
}

message AgentInput {
    string text = 1;
    string sessionId = 2;
}

message AgentStreamChunk {
    oneof chunk_type {
        StreamMetadata metadata = 1;
        SearchRequestChunk search_request = 2;
        SearchResultsChunk search_results = 3;
        AnswerChunk answer = 4;
        StreamComplete complete = 5;
        StreamError error = 6;
    }
}

message StreamMetadata {
    string status = 1;
    int32 estimated_results = 2;
    int32 estimated_queries = 3;
}


message SearchRequestChunk {
    repeated string queries = 1;
    int32 chunk_index = 2;
    bool is_final_chunk = 3;
}

message SearchResultsChunk {
    repeated SearchResult results = 1;
    int32 chunk_index = 2;
    int32 total_chunks = 3;
    bool is_final_chunk = 4;
}

message AnswerChunk {
    string content = 1;
    bool is_final = 2;
}

message StreamComplete {
    string final_status = 1;
    int32 total_results_sent = 2;
    int32 total_queries_sent = 3;
}

message StreamError {
    string error_message = 1;
    string error_code = 2;
}